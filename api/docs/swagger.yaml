basePath: /localeats.uz
definitions:
  dish.DishInfo:
    properties:
      allergens:
        items:
          type: string
        type: array
      available:
        type: boolean
      category:
        type: string
      created_at:
        type: string
      description:
        type: string
      dietary_info:
        items:
          type: string
        type: array
      id:
        type: string
      ingredients:
        items:
          type: string
        type: array
      kitchen_id:
        type: string
      kitchen_name:
        type: string
      name:
        type: string
      nutrition_info:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  dish.DishShortInfo:
    properties:
      available:
        type: boolean
      category:
        type: string
      id:
        type: string
      kitchen_id:
        type: string
      kitchen_name:
        type: string
      price:
        type: number
    type: object
  dish.Dishes:
    properties:
      dishes:
        items:
          $ref: '#/definitions/dish.DishShortInfo'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  dish.NutritionInfo:
    properties:
      allergens:
        items:
          type: string
        type: array
      calories:
        type: integer
      carbohydrates:
        type: integer
      dietary_info:
        items:
          type: string
        type: array
      fat:
        type: integer
      id:
        type: string
      protein:
        type: integer
    type: object
  dish.ReqCreateDish:
    properties:
      available:
        type: boolean
      category:
        type: string
      description:
        type: string
      ingredients:
        items:
          type: string
        type: array
      kitchen_id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  dish.ReqUpdateDish:
    properties:
      available:
        type: boolean
      category:
        type: string
      description:
        type: string
      id:
        type: string
      ingredients:
        items:
          type: string
        type: array
      name:
        type: string
      price:
        type: number
    type: object
  kitchen.KitchenInfo:
    properties:
      address:
        type: string
      created_at:
        type: string
      cuisine_type:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      owner_id:
        type: string
      phone_number:
        type: string
      rating:
        type: number
      total_orders:
        type: integer
      updated_at:
        type: string
    type: object
  kitchen.KitchenShortInfo:
    properties:
      address:
        type: string
      cuisine_type:
        type: string
      id:
        type: string
      name:
        type: string
      rating:
        type: number
      total_orders:
        type: string
    type: object
  kitchen.Kitchens:
    properties:
      Kitchens:
        items:
          $ref: '#/definitions/kitchen.KitchenShortInfo'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  kitchen.ReqCreateKitchen:
    properties:
      address:
        type: string
      cuisine_type:
        type: string
      description:
        type: string
      name:
        type: string
      owner_id:
        type: string
      phone_number:
        type: string
    type: object
  models.Error:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  order.Item:
    properties:
      dish_id:
        type: string
      quantity:
        type: integer
    type: object
  order.OrderInfo:
    properties:
      created_at:
        type: string
      delivery_address:
        type: string
      delivery_time:
        type: string
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/order.Item'
        type: array
      kitchen_id:
        type: string
      status:
        type: string
      total_amount:
        type: number
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  order.ReqCreateOrder:
    properties:
      delivery_address:
        type: string
      delivery_time:
        type: string
      items:
        items:
          $ref: '#/definitions/order.Item'
        type: array
      kitchen_id:
        type: string
      user_id:
        type: string
    type: object
  order.Status:
    properties:
      id:
        type: string
      status:
        type: string
    type: object
  order.StatusRes:
    properties:
      id:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  payment.PaymentInfo:
    properties:
      amount:
        type: number
      created_at:
        type: string
      id:
        type: string
      order_id:
        type: string
      status:
        type: string
      transaction_id:
        type: string
      updated_at:
        type: string
    type: object
  payment.ReqCreatePayment:
    properties:
      card_number:
        type: string
      cvv:
        type: string
      expiry_date:
        type: string
      order_id:
        type: string
      payment_method:
        type: string
    type: object
  review.ReqCreateReview:
    properties:
      comment:
        type: string
      kitchen_id:
        type: string
      order_id:
        type: string
      rating:
        type: integer
      user_id:
        type: string
    type: object
  review.ReviewInfo:
    properties:
      comment:
        type: string
      created_at:
        type: string
      id:
        type: string
      kitchen_id:
        type: string
      order_id:
        type: string
      rating:
        type: integer
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  user.ReqUpdateUser:
    properties:
      address:
        type: string
      bio:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      is_verified:
        type: boolean
      phone_number:
        type: string
      specialties:
        items:
          type: string
        type: array
      username:
        type: string
      years_of_experience:
        type: integer
    type: object
  user.Status:
    properties:
      message:
        type: string
    type: object
  user.User:
    properties:
      address:
        type: string
      bio:
        type: string
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      is_verified:
        type: boolean
      phone_number:
        type: string
      specialties:
        items:
          type: string
        type: array
      updated_at:
        type: string
      user_type:
        type: string
      username:
        type: string
      years_of_experience:
        type: integer
    type: object
host: localhost:8888
info:
  contact: {}
  description: LocalEats is a program to order local and homemade food with quality
    and precise delivery.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: LocalEats API Gateway
  version: "1.0"
paths:
  /dishes/{id}:
    get:
      consumes:
      - application/json
      description: gets dish by id
      parameters:
      - description: dish id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Dish informations
          schema:
            $ref: '#/definitions/dish.DishInfo'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: gets dish by id
      tags:
      - Dishes
  /dishes/{id}/update:
    put:
      consumes:
      - application/json
      description: Update dish of kitchen
      parameters:
      - description: dish id
        in: path
        name: id
        required: true
        type: string
      - description: Dish information
        in: body
        name: kitchen
        required: true
        schema:
          $ref: '#/definitions/dish.ReqUpdateDish'
      produces:
      - application/json
      responses:
        "200":
          description: Dish informations
          schema:
            $ref: '#/definitions/dish.DishInfo'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Update dish
      tags:
      - Dishes
  /dishes/{id}/updatenutritions:
    put:
      consumes:
      - application/json
      description: UpdateDishNutritionInfo
      parameters:
      - description: dish id
        in: path
        name: id
        required: true
        type: string
      - description: Dish information
        in: body
        name: kitchen
        required: true
        schema:
          $ref: '#/definitions/dish.NutritionInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Dish informations
          schema:
            $ref: '#/definitions/dish.DishInfo'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: UpdateDishNutritionInfo
      tags:
      - Dishes
  /dishes/{kitchen_id}:
    delete:
      consumes:
      - application/json
      description: deletes dish
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Dish informations
          schema:
            $ref: '#/definitions/dish.Dishes'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: deletes dish
      tags:
      - Dishes
  /dishes/all/{id}:
    get:
      consumes:
      - application/json
      description: gets dishes of the kitchen
      parameters:
      - description: kitchen id
        in: path
        name: id
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: page
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Dish informations
          schema:
            $ref: '#/definitions/dish.Dishes'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: gets dishes
      tags:
      - Dishes
  /dishes/create:
    post:
      consumes:
      - application/json
      description: creates dish
      parameters:
      - description: Kitchen information
        in: body
        name: dish
        required: true
        schema:
          $ref: '#/definitions/dish.ReqCreateDish'
      produces:
      - application/json
      responses:
        "201":
          description: Dish informations
          schema:
            $ref: '#/definitions/dish.DishInfo'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Creates dish of kitchen
      tags:
      - Dishes
  /kitchens:
    get:
      consumes:
      - application/json
      description: Retrieves a paginated list of kitchens
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: page
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of kitchens
          schema:
            $ref: '#/definitions/kitchen.Kitchens'
        "400":
          description: Invalid inputs
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: No Auth
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get list of kitchens
      tags:
      - Kitchens
  /kitchens/{id}:
    get:
      consumes:
      - application/json
      description: GetKitchenById
      parameters:
      - description: Kitchen id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Profile informations
          schema:
            $ref: '#/definitions/kitchen.KitchenInfo'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Gets kichen by id
      tags:
      - Kitchens
  /kitchens/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Retrieves a paginated list of kitchens
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of kitchens
          schema:
            $ref: '#/definitions/kitchen.Kitchens'
        "400":
          description: Invalid inputs
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: No Auth
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get list of kitchens
      tags:
      - Kitchens
  /kitchens/{id}/update:
    put:
      consumes:
      - application/json
      description: Updates kitchen
      parameters:
      - description: Kitchen id
        in: path
        name: id
        required: true
        type: string
      - description: Kitchen information
        in: body
        name: kitchen
        required: true
        schema:
          $ref: '#/definitions/kitchen.ReqCreateKitchen'
      produces:
      - application/json
      responses:
        "200":
          description: Profile informations
          schema:
            $ref: '#/definitions/kitchen.KitchenInfo'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Updates kitchen
      tags:
      - Kitchens
  /kitchens/create:
    post:
      consumes:
      - application/json
      description: creates kitchen
      parameters:
      - description: Kitchen information
        in: body
        name: kitchen
        required: true
        schema:
          $ref: '#/definitions/kitchen.ReqCreateKitchen'
      produces:
      - application/json
      responses:
        "201":
          description: Profile informations
          schema:
            $ref: '#/definitions/kitchen.KitchenInfo'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Creates kitchen of user
      tags:
      - Kitchens
  /kitchens/search:
    get:
      consumes:
      - application/json
      description: Retrieves a paginated list of kitchens
      parameters:
      - description: Name
        in: query
        name: name
        type: string
      - description: Cuisine Type
        in: query
        name: cuisine_type
        type: string
      - description: Rating
        in: query
        name: rating
        required: true
        type: number
      - description: Address
        in: query
        name: address
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: page
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of kitchens
          schema:
            $ref: '#/definitions/kitchen.Kitchens'
        "400":
          description: Invalid inputs
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: No Auth
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get list of kitchens
      tags:
      - Kitchens
  /orders/{id}:
    get:
      consumes:
      - application/json
      description: gets
      parameters:
      - description: order id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order informations
          schema:
            $ref: '#/definitions/order.OrderInfo'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: gets order
      tags:
      - Orders
  /orders/{id}/update:
    put:
      consumes:
      - application/json
      description: updates
      parameters:
      - description: Status information
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/order.Status'
      produces:
      - application/json
      responses:
        "200":
          description: Order informations
          schema:
            $ref: '#/definitions/order.StatusRes'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: updates order
      tags:
      - Orders
  /orders/{kitchen_id}:
    delete:
      consumes:
      - application/json
      description: deletes order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Dish informations
          schema:
            $ref: '#/definitions/dish.Dishes'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: deletes order
      tags:
      - Orders
  /orders/chef/{id}:
    get:
      consumes:
      - application/json
      description: gets
      parameters:
      - description: order id
        in: path
        name: id
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: page
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Order informations
          schema:
            $ref: '#/definitions/order.OrderInfo'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: gets order
      tags:
      - Orders
  /orders/create:
    post:
      consumes:
      - application/json
      description: creates
      parameters:
      - description: Payment information
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/payment.ReqCreatePayment'
      produces:
      - application/json
      responses:
        "201":
          description: Payment informations
          schema:
            $ref: '#/definitions/payment.PaymentInfo'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Creates payment
      tags:
      - Payments
  /orders/user/{id}:
    get:
      consumes:
      - application/json
      description: gets
      parameters:
      - description: order id
        in: path
        name: id
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: page
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Order informations
          schema:
            $ref: '#/definitions/order.OrderInfo'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: gets order
      tags:
      - Orders
  /reviews/{id}:
    delete:
      consumes:
      - application/json
      description: deletes
      parameters:
      - description: review id
        in: path
        name: id
        required: true
        type: string
      - description: Review information
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/review.ReqCreateReview'
      produces:
      - application/json
      responses:
        "201":
          description: Review informations
          schema:
            $ref: '#/definitions/review.ReviewInfo'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: deletes review
      tags:
      - Reviews
    get:
      consumes:
      - application/json
      description: gets
      parameters:
      - description: review id
        in: path
        name: id
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: Review information
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/review.ReqCreateReview'
      produces:
      - application/json
      responses:
        "201":
          description: Review informations
          schema:
            $ref: '#/definitions/review.ReviewInfo'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get reviews
      tags:
      - Reviews
  /reviews/create:
    post:
      consumes:
      - application/json
      description: creates
      parameters:
      - description: Review information
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/review.ReqCreateReview'
      produces:
      - application/json
      responses:
        "201":
          description: Review informations
          schema:
            $ref: '#/definitions/review.ReviewInfo'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Creates review
      tags:
      - Reviews
  /users/{id}/delete:
    delete:
      consumes:
      - application/json
      description: get full profile information
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: About deletion
          schema:
            $ref: '#/definitions/user.Status'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Gets User Profile by id
      tags:
      - Users
  /users/{id}/profile:
    get:
      consumes:
      - application/json
      description: get full profile information
      operationId: getprofile
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Profile informations
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Gets User Profile by id
      tags:
      - Users
  /users/{id}/update:
    put:
      consumes:
      - application/json
      description: get full profile information
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      - description: User id
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.ReqUpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: Profile informations
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: 'Invalid inputs can result to '
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: 'No Auth thats the problem '
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Something went wrong in server
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Gets User Profile by id
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
